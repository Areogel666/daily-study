/**
	 * 
	 * @Title: productPdf
	 * @Description:  生成pdf并打包
	 * @return Reply
	 * @throws
	 */
@aAuth(type = aAuth.aAuthType.USER)
	@aPermission(name = { "项目管理", "项目一览", "电子合同", "生成" })
	@aDev(code = "6195", email = "yuq@strongflc.com", name = "yuq")
	public Reply productPdf() {
		Map<String, Object> param = _getParameters();
		
		System.err.println(param.toString());
		String project_id = StringUtils.nullToString(param.get("PROJECT_ID"));
		String PRO_CODE = StringUtils.nullToString(param.get("PRO_CODE"));
		String pdf_type=StringUtils.nullToOther(param.get("PDF_TYPE"),"0");//默认生成标准合同，非套打合同
		
		PdfTemplateService service = new PdfTemplateService();
		
		// 1、根据项目编号查询项目对应的电子档案模板列表
		List<Map<String, Object>> l = service
				.getProjectPdfTemplateLists_new(project_id);
		if (l == null || l.size() == 0) {
			throw new ActionException("该项目无对应的电子合同模板，请联系管理员！");
		}
		
		//如果之前已经生成过合同先删除老版本   不删除不影响后续操作，但是产时间占有服务器存储容量
		if(StringUtils.isNotBlank(param.get("TPM_UUID"))){
			String TPM_UUID = StringUtils.nullToString(param.get("TPM_UUID"));
			File dir = new File((String) SkyEye.getConfig().get("file.path.temp")+"/pdfTemplate/hist/"+TPM_UUID);
			service.deleteDir(dir);
			//删除历史版本参数
			service.deletePdfTemplateHistDataNew(param);
		}
		
		// System.out.println("获取项目电子档案明细："+PRO_CODE+"--------\n"+l);
		String uuid = service.generateShortUuid();
		for (Map<String, Object> m : l) {
			String tpm_code = StringUtils.nullToString(m.get("TPM_CODE"));
			String pdfTemplateName = StringUtils.nullToString(m.get("NAME"));
			Map<String, Object> acrobatContext = new HashMap<String, Object>();
			acrobatContext.put("PROJECT_ID", project_id);
			try {
				// System.out.println("当前-----------》"+tpm_code+"----->"+pdfTemplateName);
				// 2、一次生成电子合同
				String outputFilePath = service.producePdf_new(tpm_code,pdfTemplateName,pdf_type, acrobatContext, uuid);
				service.savePdfTemplateHistData(acrobatContext);
				// System.out.println("当前-----------》保存路径"+pdfTemplateName);
			} catch (Exception e) {
				e.printStackTrace();
				throw new ActionException("合同生成类型："+tpm_code+"名字为："+pdfTemplateName+"异常，请联系管理员！");
			}
		}
		try {
			// 3、将合同打包
			String zipfile = service.zipPdf(project_id);
			// 4、挂接到项目主表
			service.updateProjectPdfInfo(project_id, zipfile);
		} catch (IOException e) {
			e.printStackTrace();
			throw new ActionException("合同生成异常，请联系管理员！");
		}
		return new ReplyAjax(true, "生成合同成功");
	}
